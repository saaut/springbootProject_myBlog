<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2024-02-20T07:21:18" hostname="DESKTOP-4NPTAGI" time="0.899">
  <properties/>
  <testcase name="블로그 글 삭제에 성공한다." classname="org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest" time="0.371"/>
  <testcase name="findArticle: 블로그 글 조회에 성공한다." classname="org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest" time="0.152"/>
  <testcase name="블로그 글 목록 조회에 성공한다." classname="org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest" time="0.04"/>
  <testcase name="addArticle:블로그 글 추가에 성공한다." classname="org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest" time="0.256"/>
  <testcase name="updateArticle:블로그 글 수정에 성공한다." classname="org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest" time="0.072"/>
  <system-out><![CDATA[2024-02-20T16:21:17.785+09:00  INFO 3132 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest]: BlogApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-02-20T16:21:17.817+09:00  INFO 3132 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.myBlog.springbootdeveloper.SpringBootDeveloperApplication for test class org.myBlog.springbootdeveloper.controller.controller.BlogApiControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.2)

2024-02-20T16:21:17.889+09:00  INFO 3132 --- [    Test worker] o.m.s.c.c.BlogApiControllerTest          : Starting BlogApiControllerTest using Java 17.0.9 with PID 3132 (started by 전선미 in C:\springStudy\myBlog)
2024-02-20T16:21:17.889+09:00  INFO 3132 --- [    Test worker] o.m.s.c.c.BlogApiControllerTest          : No active profile set, falling back to 1 default profile: "default"
2024-02-20T16:21:18.271+09:00  INFO 3132 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-02-20T16:21:18.313+09:00  INFO 3132 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38 ms. Found 4 JPA repository interfaces.
2024-02-20T16:21:18.450+09:00  INFO 3132 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-02-20T16:21:18.452+09:00  INFO 3132 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:17431240-3e10-462e-9a31-9cf616643069 user=SA
2024-02-20T16:21:18.453+09:00  INFO 3132 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-02-20T16:21:18.455+09:00  INFO 3132 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-02-20T16:21:18.464+09:00  WARN 3132 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2024-02-20T16:21:18.472+09:00  INFO 3132 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table if exists article cascade 
Hibernate: 
    
    drop table if exists comments cascade 
Hibernate: 
    
    drop table if exists refresh_token cascade 
Hibernate: 
    
    drop table if exists users cascade 
Hibernate: 
    
    create table article (
       id bigint generated by default as identity,
        author varchar(255) not null,
        content varchar(255) not null,
        created_at timestamp(6),
        title varchar(255) not null,
        updated_at timestamp(6),
        primary key (id)
    )
Hibernate: 
    
    create table comments (
       id bigint generated by default as identity,
        comment TEXT not null,
        created_date varchar(255),
        modified_date varchar(255),
        article_id bigint,
        user_id bigint,
        primary key (id)
    )
Hibernate: 
    
    create table refresh_token (
       id bigint generated by default as identity,
        refresh_token varchar(255) not null,
        user_id bigint not null,
        primary key (id)
    )
Hibernate: 
    
    create table users (
       id bigint generated by default as identity,
        email varchar(255) not null,
        nickname varchar(255),
        password varchar(255),
        primary key (id)
    )
Hibernate: 
    
    alter table if exists refresh_token 
       add constraint UK_f95ixxe7pa48ryn1awmh2evt7 unique (user_id)
Hibernate: 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: 
    
    alter table if exists users 
       add constraint UK_2ty1xmrrgtn89xt7kyxx6ta7h unique (nickname)
Hibernate: 
    
    alter table if exists comments 
       add constraint FKnwlc4xv9fm2swgesuas3uf3mo 
       foreign key (article_id) 
       references article
Hibernate: 
    
    alter table if exists comments 
       add constraint FK8omq0tc18jd43bu5tjh6jvraq 
       foreign key (user_id) 
       references users
2024-02-20T16:21:18.584+09:00  INFO 3132 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-02-20T16:21:18.584+09:00  INFO 3132 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-02-20T16:21:18.708+09:00  WARN 3132 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-02-20T16:21:18.805+09:00  INFO 3132 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4c29138a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@199549a5, org.springframework.security.web.context.SecurityContextHolderFilter@272d0dd3, org.springframework.security.web.header.HeaderWriterFilter@128579a6, org.springframework.security.web.authentication.logout.LogoutFilter@48ebcce5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@84180e2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3c3d2a80, org.myBlog.springbootdeveloper.config.TokenAuthenticationFilter@6b334a1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f142cbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@766534b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5edeb83e, org.springframework.security.web.session.SessionManagementFilter@14d5b2ac, org.springframework.security.web.access.ExceptionTranslationFilter@78b20c7f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18482805]
2024-02-20T16:21:18.875+09:00  INFO 3132 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:17431240-3e10-462e-9a31-9cf616643069'
2024-02-20T16:21:18.895+09:00  WARN 3132 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@518d4537. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-02-20T16:21:18.895+09:00  INFO 3132 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@518d4537
2024-02-20T16:21:18.895+09:00  WARN 3132 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/img/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-02-20T16:21:18.895+09:00  INFO 3132 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/img/**']
2024-02-20T16:21:18.895+09:00  WARN 3132 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/css/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-02-20T16:21:18.895+09:00  INFO 3132 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/css/**']
2024-02-20T16:21:18.895+09:00  WARN 3132 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/js/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-02-20T16:21:18.896+09:00  INFO 3132 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/js/**']
2024-02-20T16:21:18.961+09:00  INFO 3132 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-20T16:21:18.961+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-20T16:21:18.964+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2024-02-20T16:21:18.976+09:00  INFO 3132 --- [    Test worker] o.m.s.c.c.BlogApiControllerTest          : Started BlogApiControllerTest in 1.152 seconds (process running for 11.171)
2024-02-20T16:21:18.986+09:00  INFO 3132 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-20T16:21:18.986+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-20T16:21:18.987+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    left join
        comments c1_0 
            on a1_0.id=c1_0.article_id 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        a1_0.id=? 
    order by
        c1_0.id asc
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2024-02-20T16:21:19.355+09:00  INFO 3132 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-20T16:21:19.355+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-20T16:21:19.358+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    left join
        comments c1_0 
            on a1_0.id=c1_0.article_id 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        a1_0.id=? 
    order by
        c1_0.id asc
2024-02-20T16:21:19.510+09:00  INFO 3132 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-20T16:21:19.510+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-20T16:21:19.511+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
2024-02-20T16:21:19.552+09:00  INFO 3132 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-20T16:21:19.552+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-20T16:21:19.553+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
2024-02-20T16:21:19.812+09:00  INFO 3132 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-20T16:21:19.812+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-20T16:21:19.814+09:00  INFO 3132 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        comments c1_0 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        c1_0.article_id=? 
    order by
        c1_0.id asc
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    left join
        comments c1_0 
            on a1_0.id=c1_0.article_id 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        a1_0.id=? 
    order by
        c1_0.id asc
Hibernate: 
    update
        article 
    set
        author=?,
        content=?,
        created_at=?,
        title=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        c1_0.article_id,
        c1_0.id,
        c1_0.comment,
        c1_0.created_date,
        c1_0.modified_date,
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    left join
        comments c1_0 
            on a1_0.id=c1_0.article_id 
    left join
        users u1_0 
            on u1_0.id=c1_0.user_id 
    where
        a1_0.id=? 
    order by
        c1_0.id asc
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
